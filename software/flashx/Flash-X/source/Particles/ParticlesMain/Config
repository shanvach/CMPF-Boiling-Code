#  Configuration file for the time integration main portion of the Particles unit

# Set up a name to use in ifdef/ifndef lines
PPDEFINE FLASH_PARTICLES

USESETUPVARS Grid

REQUIRES Driver
REQUESTS monitors/Logfile
REQUIRES RuntimeParameters
REQUIRES Grid/GridParticles

IF Grid=='Amrex'
  REQUESTS Particles/ParticlesMain/passive/MeshOwned
  REQUESTS Particles/ParticlesInitialization/MeshOwned
  REQUESTS Particles/ParticlesMapping/MeshOwned
  REQUESTS Grid/GridParticles/GridParticlesMapFromMesh/MeshOwned
  REQUESTS Grid/GridParticles/GridParticlesMove/MeshOwned
ELSE
  REQUESTS Particles/ParticlesMain/passive/ParticlesOwned
  REQUESTS Particles/ParticlesInitialization/ParticlesOwned
  REQUESTS Particles/ParticlesMapping/ParticlesOwned
  REQUESTS Grid/GridParticles/GridParticlesMapFromMesh/ParticlesOwned
  REQUESTS Grid/GridParticles/GridParticlesMove/ParticlesOwned
ENDIF


DEFAULT passive




D   pt_maxPerProc      Maximum number of particles per processor -- too small will cause a crash at reallocation
D   useParticles       Whether to advance particles [TRUE] or not [FALSE]
D   pt_small           If velocities are greater than this, then time stepping may be limited
D   pt_dtFactor        Factor multiplying dx/|v| in setting particle timestep limit 
D   pt_dtChangeTolerance   EstiMidpoint does predictor step if time step change is less than this percentage.
D &                       Set to 0 to always do Euler, set to huge number to always use estim. midpoints
D pt_numAtOnce   To be used when reading the particles from some file

PARAMETER pt_maxPerProc  INTEGER 1000
PARAMETER useParticles    BOOLEAN TRUE
PARAMETER pt_small       REAL    1.0E-10
PARAMETER pt_dtFactor       REAL    0.5
PARAMETER pt_dtChangeTolerance  REAL  0.4 [0.0 to ] # controls Euler vs. estim. midpoint step
PARAMETER pt_numAtOnce INTEGER 1

D pt_logLevel controls the level of logging for some conditions.
D & See Particles.h for relevant PT_LOGLEVEL_* definitions.
PARAMETER pt_logLevel INTEGER 1001 [0 to ]

#  Particle properties/attributes

D posx_particleprop   x coordinate of particle
D posy_particleprop   y coordinate of particle
D posz_particleprop   z coordinate of particle
D velx_particleprop   x velocity of particle
D vely_particleprop   y velocity of particle
D velz_particleprop   z velocity of particle
D tag_particleprop   unique local ID of particle
D blk_particleprop   local ID of block containing the particle when written
D proc_particleprop   MPI rank that is writing the particle


PARTICLEPROP posx     REAL
PARTICLEPROP posy     REAL
PARTICLEPROP posz     REAL
PARTICLEPROP velx     REAL
PARTICLEPROP vely     REAL
PARTICLEPROP velz     REAL
PARTICLEPROP tag      REAL
PARTICLEPROP blk      REAL
PARTICLEPROP proc     REAL

USESETUPVARS ParticlesBirthCpu
IF ParticlesBirthCpu or (Grid == 'Amrex')
   PPDEFINE  PARTICLES_BIRTHCPU
   PARTICLEPROP  cpu   REAL
ENDIF

# Following lines modified/added KW 2012-05-25
USESETUPVARS SupportVirtualParticles
IF SupportVirtualParticles
   PPDEFINE     PART_VIRTUAL
   PARTICLEPROP virt    REAL
ENDIF

# Note PARTICLEPROP mass is defined in the active/massive/* implementations

D particle_attribute_# Allows users to specify the properties of 
D & particles they want to track at runtime

PARAMETER particle_attribute_1 STRING "none"
PARAMETER particle_attribute_2 STRING "none"
PARAMETER particle_attribute_3 STRING "none"
PARAMETER particle_attribute_4 STRING "none"
PARAMETER particle_attribute_5 STRING "none"
PARAMETER particle_attribute_6 STRING "none"
PARAMETER particle_attribute_7 STRING "none"
PARAMETER particle_attribute_8 STRING "none"
PARAMETER particle_attribute_9 STRING "none"
PARAMETER particle_attribute_10 STRING "none"

