
[hy_check_config]
definition=
  #ifdef SPARK_HYDRO_NONTELESC
     if (hy_fluxCorrect .AND. hy_fluxCorrectPerLevel) then
        call Driver_abort("Cannot enable per-level flux correction for nontelescoping Spark!")
  #if defined(FLASH_GRID_AMREX) || defined(FLASH_GRID_MILHOJA)
     else
        block
          logical,SAVE :: wantWarning = .TRUE.
          if (wantWarning) then
             print*,'WARNING: Nontelescoping Spark with Amrex Grid, number of SCRATCHCENTERVARs may be wrong!'
             print*,'WARNING: NSCRATCH_CENTER_VARS =',NSCRATCH_CENTER_VARS,', NUNK_VARS =',NUNK_VARS
  #ifdef __GFORTRAN__
  #   define STRINGIFY_START(X) "&
  #   define STRINGIFY_END(X) &X"
  #else /* default stringification */
  #   define STRINGIFY_(X) #X
  #   define STRINGIFY_START(X) &
  # define STRINGIFY_END(X) STRINGIFY_(X)
  #endif
             print*,'WARNING: NSCRATCH_CENTER_VARS is ', STRINGIFY_START(NSCRATCH_CENTER_VARS)
             STRINGIFY_END(NSCRATCH_CENTER_VARS)
          end if
          wantWarning = .FALSE.
        end block
  #endif
     end if
  #endif

[hy_saveFluxBuf]
args= fluxBuf, farea, flux
definition=
  fluxBuf(v,i,j,k) = farea(i,j,k)*weights(stage)*flux(v,i,j,k)

[hy_map_tmp_states]
definition=
    hy_starState => Uin
    call tileDesc%%getDataPtr(hy_tmpState, SCRATCH_CTR)

[hy_release_tmp_states]
definition=
   nullify(hy_starState)
   nullify(hy_tmpState)



[hy_saveState]
definition =
  ! update temp vars with solution data
  if(stage==1) then
    @M hy_DIR_parallel_loop_simd(3) &
    @M hy_DIR_private([v])
    @M loop_3d(blkLimits)
       do v=1,NUNK_VARS
          tmpState(v,i,j,k)=Uin(v,i,j,k)
       end do
    @M loop_end_3d
  end if

[hy_updateState]
definition =
  #ifdef GPOT_VAR
  ! reset GPOT_VAR
  hy_starState(GPOT_VAR,@M bounds_3d(blkLimits)) = &
       hy_tmpState(GPOT_VAR,@M bounds_3d(blkLimits))
  #endif

[hy_stages_t]
definition = 

[hy_end_stages_t]
definition = 


[hy_stages_nt]
definition = 
  do stage=1,last_stage 

[hy_end_stages_nt]
definition =
   end do  ! end stages

[hy_setLimits]
definition=
  ! should be the same as blkLimits in Non-telescoping mode
  limits(:,:,stage) = blkLimits(:,:)

[hy_tmpState_dimension]
definition=
  dimension(1:, lo(1):, lo(2):, lo(3):)

