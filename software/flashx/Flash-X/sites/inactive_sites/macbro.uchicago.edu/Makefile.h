# FLASH makefile definitions for ix86-64 Linux (gfortran compiler)

#----------------------------------------------------------------------------
# Set the HDF/HDF5 library paths -- these need to be updated for your system
#----------------------------------------------------------------------------

HDF5_PATH = /usr/local/Cellar/hdf5/1.8.13
LIB_HDF5 = ${HDF5_PATH}/lib
HYPRE_PATH = /Users/manolis/flashdeps/hypre-2.9.0b/src/hypre

ZLIB_PATH  = /usr/local/opt/zlib

GSL_PATH = /usr/local/Cellar/gsl/1.16

PAPI_PATH  =
PAPI_FLAGS =

LIB_NCMPI = /usr/local/Cellar/mpich2/3.1.3/bin
#LIB_NCMPI = /user/local/bin/mpif90
MPE_PATH   =
#MPI_PATH  = /usr/local/bin
MPI_PATH = /usr/local/Cellar/mpich2/3.1.3/bin

#----------------------------------------------------------------------------
# Compiler and linker commands
#
#   Use the MPICH wrappers around the compilers -- these will automatically
#   load the proper libraries and include files.  Version of MPICH prior
#   to 1.2.2 (?) do not recognize .F90 as a valid Fortran file extension.
#   You need to edit mpif90 and add .F90 to the test of filename extensions,
#   or upgrade your MPICH.
#----------------------------------------------------------------------------
FCOMP   = $(MPI_PATH)/mpif90
CCOMP   = $(MPI_PATH)/mpicc
CPPCOMP = $(MPI_PATH)/mpiCC
LINK    = $(MPI_PATH)/mpif90

# pre-processor flag
PP      = -D

#----------------------------------------------------------------------------
# Compilation flags
#
#  Three sets of compilation/linking flags are defined: one for optimized
#  code, one for testing, and one for debugging.  The default is to use the
#  _OPT version.  Specifying -debug to setup will pick the _DEBUG version,
#  these should enable bounds checking.  Specifying _TEST is used for
#  flash_test, and is set for quick code generation, and (sometimes)
#  profiling.  The Makefile generated by setup will assign the generic token
#  (ex. FFLAGS) to the proper set of flags (ex. FFLAGS_OPT).
#----------------------------------------------------------------------------
#-ffpe-trap=invalid,zero,overflow 

FFLAGS_OPT = -c -O3 -fdefault-real-8 -fdefault-double-8 -ffree-line-length-none 
FFLAGS_DEBUG = -ggdb -c -O0 -fdefault-real-8 -fdefault-double-8 \
-ffree-line-length-none -pedantic -Wall -Wextra -Waliasing \
-Wsurprising -Wconversion -Wunderflow \
-fcheck=all \
-fbacktrace -fdump-core -finit-real=snan \
-finit-integer=-999999 -fimplicit-none -fstack-protector-all -ffpe-trap=invalid,zero,overflow
FFLAGS_TEST = -c -fdefault-real-8 -fdefault-double-8 -ffree-line-length-none 

FFLAGS_HYPRE = -I${HYPRE_PATH}/include
CFLAGS_HYPRE = -I${HYPRE_PATH}/include
CFLAGS_GSL = -I${GSL_PATH}/include

F90FLAGS = -I ${HDF5_PATH}/include -DH5_USE_18_API

CFLAGS_OPT = -O3  -c -DDarwin
CFLAGS_DEBUG = -ggdb -c -Wno-div-by-zero -Wundef  \
-Wconversion -Wstrict-prototypes -Wunreachable-code \
-pedantic -Wall -Wextra -Winit-self -Wfloat-equal \
-Wunsafe-loop-optimizations -Wpadded -fstack-protector-all -O0
CFLAGS_TEST = -c

# Platform symbol
CDEFINES += -DDarwin

# if we are using HDF5, we need to specify the path to the include files
CFLAGS_HDF5 = -I ${HDF5_PATH}/include -DH5_USE_18_API

CFLAGS_NCMPI = 

#----------------------------------------------------------------------------
# Linker flags
#
#  There is a seperate version of the linker flags for each of the _OPT,
#  _DEBUG, and _TEST cases.
#----------------------------------------------------------------------------

LFLAGS_OPT   = -lgomp -o
#LFLAGS_DEBUG = -lgomp -O0 -g -o
LFLAGS_DEBUG = -lgomp -ggdb -O0 -o
LFLAGS_TEST  = -lgomp -o


#----------------------------------------------------------------------------
# Library specific linking
#
#  If a FLASH module has a 'LIBRARY xxx' line in its Config file, we need to
#  create a macro in this Makefile.h for LIB_xxx, which will be added to the
#  link line when FLASH is built.  This allows us to switch between different
#  (incompatible) libraries.  We also create a _OPT, _DEBUG, and _TEST
#  library macro to add any performance-minded libraries (like fast math),
#  depending on how FLASH was setup.
#----------------------------------------------------------------------------

LIB_OPT   = 
LIB_DEBUG =
LIB_TEST  =

#LIB_HDF5  = -L${HDF5_PATH}/lib -lhdf5 /usr/lib64/libz.a
LIB_HDF5  = -L${HDF5_PATH}/lib -lhdf5  -lz 

LIB_PAPI  =
#LIB_MATH  = -ldfftw -ldrfftw

LIB_HYPRE = -L${HYPRE_PATH}/lib -lHYPRE

LIB_MPI   = 
#LIB_NCMPI = -L $(NCMPI_PATH)/lib -lpnetcdf
LIB_MPE   =

LIB_GSL = -L/usr/local/Cellar/gsl/1.16/lib -l gsl

#----------------------------------------------------------------------------
# Additional machine-dependent object files
#
#  Add any machine specific files here -- they will be compiled and linked
#  when FLASH is built.
#----------------------------------------------------------------------------

MACHOBJ =


#----------------------------------------------------------------------------
# Additional commands
#----------------------------------------------------------------------------

MV = mv -f
AR = ar -r
RM = rm -f
CD = cd
RL = ranlib
ECHO = echo

ifeq ($(FLASHBINARY),true)

FFLAGS_WO_WARNALL = $(patsubst -Wall,,$(FFLAGS))

#gfortran version 4.9.1 and 4.9.2 (at least) produce code that
#resutls in PARAMESH errors, unless we use -O0 for this file.
mpi_amr_1blk_guardcell.o : %.o : %.F90
	$(FCOMP) $(FFLAGS) -O0 -pedantic -Wall -Wextra -Waliasing -Wsurprising -Wconversion -Wunderflow -fcheck=all -fbacktrace $(F90FLAGS) $(FDEFINES)	$<
endif
