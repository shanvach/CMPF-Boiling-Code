# FLASH makefile definitions for compute001.mcs.anl.gov
#----------------------------------------------------------------------------
# Set the AMReX library path -- manual installation for multiple variants
#----------------------------------------------------------------------------
ifeq ("$(USEOPENMP)","1")
  AMREX_PATH=/nfs/proj-flash5/amrex_install_omp_intel/${NDIM}D
else
  AMREX_PATH=/nfs/proj-flash5/amrex_install_intel/${NDIM}D
endif
#----------------------------------------------------------------------------
# Set the HDF5/MPI library paths -- managed by loading with softenv
#----------------------------------------------------------------------------
HDF5_PATH  = 
HYPRE_PATH = 
ZLIB_PATH  =
PAPI_PATH  =
PAPI_FLAGS =
LIB_NCMPI  = /usr/local

#----------------------------------------------------------------------------
# Compiler and linker commands
#
#   Use the parallel HDF5 wrappers which use the mpiXX compiler wrappers 
#   -- these will automatically load the proper libraries and include files.
#----------------------------------------------------------------------------
FCOMP   = h5pfc
CCOMP   = h5pcc
CPPCOMP = h5pcc -std=c++14
LINK    = h5pfc

# pre-processor flag
PP      = -D

#----------------------------------------------------------------------------
# Compilation flags
#
#  Three sets of compilation/linking flags are defined: one for optimized
#  code, one for testing, and one for debugging.  The default is to use the
#  _OPT version.  Specifying -debug to setup will pick the _DEBUG version,
#  these should enable bounds checking.  Specifying _TEST is used for
#  flash_test, and is set for quick code generation, and (sometimes)
#  profiling.  The Makefile generated by setup will assign the generic token
#  (ex. FFLAGS) to the proper set of flags (ex. FFLAGS_OPT).
#----------------------------------------------------------------------------

OPENMP = -qopenmp
FFLAGS_OPT   = -c -O2 -fpp \
               -double-size 64 -real-size 64 -integer-size 32 -fpconstant \
               -fp-model precise
FFLAGS_DEBUG = -g -c -O0 -fpp \
               -double-size 64 -real-size 64 -integer-size 32 -fpconstant \
               -fp-model precise \
               -fpe0 -ftrapuv -traceback \
               -check uninit -check bounds -check format -check pointers \
               -check output_conversion -check stack -warn all -warn errors
FFLAGS_TEST  = -c -O0 -fpp \
               -double-size 64 -real-size 64 -integer-size 32 -fpconstant \
               -fp-model precise \
               -fpe0 -ftrapuv -traceback

FFLAGS_HYPRE =
FFLAGS_LAPACK= -mkl=sequential
FFLAGS_AMREX = -I${AMREX_PATH}/include
FFLAGS_AMREX2D = ${FFLAGS_AMREX} -DN_DIM=2 -DNZB=1

F90FLAGS = -DHAVE_MPI_MODULE

#The macro _FORTIFY_SOURCE adds some lightweight checks for buffer
#overflows at both compile time and run time (only active at -O1 or higher)
#http://gcc.gnu.org/ml/gcc-patches/2004-09/msg02055.html
CFLAGS_OPT = -c -O2 -fp-model precise
CFLAGS_DEBUG = -ggdb -c -O0 \
               -fp-model precise \
               -debug all -debug extended \
               -ftrapuv -traceback -fp-stack-check \
               -fp-trap=divzero,invalid,overflow,underflow
CFLAGS_TEST = ${CFLAGS_DEBUG}

# Platform symbol
#CDEFINES += 

CFLAGS_HDF5 = -DH5_USE_18_API
CFLAGS_NCMPI = -I$(LIB_NCMPI)/include
CFLAGS_LAPACK= -mkl=sequential
CFLAGS_AMREX = -I${AMREX_PATH}/include

#----------------------------------------------------------------------------
# Linker flags
#
#  There is a seperate version of the linker flags for each of the _OPT,
#  _DEBUG, and _TEST cases.
#----------------------------------------------------------------------------

LFLAGS_OPT   = -o
LFLAGS_DEBUG = -g -O0 -o
LFLAGS_TEST  = -O0 -o

#----------------------------------------------------------------------------
# Library specific linking
#
#  If a FLASH module has a 'LIBRARY xxx' line in its Config file, we need to
#  create a macro in this Makefile.h for LIB_xxx, which will be added to the
#  link line when FLASH is built.  This allows us to switch between different
#  (incompatible) libraries.  We also create a _OPT, _DEBUG, and _TEST
#  library macro to add any performance-minded libraries (like fast math),
#  depending on how FLASH was setup.
#
#  Mostly handled by loading modules with Spack and h5pXX wrappers.
#----------------------------------------------------------------------------

LIB_OPT   =
LIB_DEBUG =
LIB_TEST  =

LIB_HDF5  =
LIB_LAPACK= -mkl=sequential
LIB_PAPI  =
LIB_MATH  =
LIB_MPI   = 
LIB_MPE   =
LIB_HYPRE =
LIB_AMREX = -L${AMREX_PATH}/lib -lamrex
LIB_AMREX2D = ${LIB_AMREX}
LIB_STDCXX = -lstdc++

# Uncomment the following line to use electic fence memory debugger.
# Need the following environmental variable (see env.sh):
# export EF_ALLOW_MALLOC_0=1
#CONFIG_LIB = -L/usr/lib64 -lefence

#----------------------------------------------------------------------------
# Additional machine-dependent object files
#
#  Add any machine specific files here -- they will be compiled and linked
#  when FLASH is built.
#----------------------------------------------------------------------------

MACHOBJ =

#----------------------------------------------------------------------------
# Additional commands
#----------------------------------------------------------------------------

MV = mv -f
AR = ar -r
RM = rm -f
CD = cd
RL = ranlib
ECHO = echo

