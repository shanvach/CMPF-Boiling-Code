#!/bin/bash

#SBATCH -n 10
#SBATCH -t 5:00:00
#SBATCH --mem-per-cpu=1024
#    SBATCH -share
#SBATCH --exclusive
#SBATCH --partition=standard
#SBATCH --export=NONE

set -e

export JobWorkDir="/scratch/zt1/project/ariaz-prj/user/svachhan/Flash-X-Demo/simulation/FlowBoiling"

cd /scratch/zt1/project/ariaz-prj/user/svachhan/Flash-X-Demo

# This file is generated using configuration script
SiteName="zaratan.umd.edu"
Profile=False

cd /scratch/zt1/project/ariaz-prj/user/svachhan/Flash-X-Demo

# Bash file to load modules and set environment
# variables for compilers and external libraries

# Set project home using realpath
# of current directory
export PROJECT_HOME=$(realpath .)

# Set SiteHome to realpath of SiteName
SiteHome="$PROJECT_HOME/sites/$SiteName"

# Load modules from the site directory
source $SiteHome/environment.sh

# Path to parallel HDF5 installtion with fortran support
if [ $HDF5_HOME ]; then
	BuildHDF5=false
else
	BuildHDF5=true
	export HDF5_HOME="$PROJECT_HOME/software/hdf5/HDF5/install-$SiteName"
	export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:$HDF5_HOME/lib"
	export LIBRARY_PATH="$LD_LIBRARY_PATH"
fi

# Store path to amrex as environment variable
export AMREX2D_HOME="$PROJECT_HOME/software/amrex/AMReX/install-$SiteName/2D"
export AMREX3D_HOME="$PROJECT_HOME/software/amrex/AMReX/install-$SiteName/3D"

# Path to Flash-X
export FLASHX_HOME="$PROJECT_HOME/software/flashx/Flash-X"

# Output information to stdout
echo "---------------------------------------------------------------------------------------"
echo "Execution Environment:"
echo "---------------------------------------------------------------------------------------"
echo "PROJECT_HOME=$PROJECT_HOME"
echo "SITE_HOME=$SiteHome"
echo "MPI_HOME=$MPI_HOME"
echo "HDF5_HOME=$HDF5_HOME"
echo "FLASHX_HOME=$FLASHX_HOME"
echo "AMREX2D_HOME=$AMREX2D_HOME"
echo "AMREX3D_HOME=$AMREX3D_HOME"
echo "LD_LIBRARY_PATH=$LD_LIBRARY_PATH"
echo "PATH=$PATH"
echo "---------------------------------------------------------------------------------------"

cd /scratch/zt1/project/ariaz-prj/user/svachhan/Flash-X-Demo/simulation/FlowBoiling

if [[ $SiteName == "summit/gcc-10.2.0" || $SiteName == "summit/gcc-9.3.0" ]]; then

	echo Calculating resources for $SiteName

	# this sets up some variables to run jsrun,
	# with 6 resource sets per node,
	# and 7 MPI ranks per resource set.
	#
	export NNODES=$(($(cat $LSB_DJOB_HOSTFILE | uniq | wc -l) - 1))
	export NCORES_PER_NODE=42
	export NGPU_PER_NODE=6
	export NRS_PER_NODE=6
	export NMPI_PER_RS=7
	export NCORES_PER_RS=$(($NCORES_PER_NODE / $NRS_PER_NODE))
	export NCORES_PER_MPI=$(($NCORES_PER_RS / $NMPI_PER_RS))
	export NRS=$(($NNODES * $NRS_PER_NODE))
	export OMP_NUM_THREADS=1
fi

cd /scratch/zt1/project/ariaz-prj/user/svachhan/Flash-X-Demo/simulation/FlowBoiling

# Run the actualy job using this target script
if [[ $SiteName == "summit/gcc-10.2.0" || $SiteName == "summit/gcc-9.3.0" ]]; then

	echo Running on $SiteName

	cd $JobWorkDir && stdbuf -o0 jsrun -n ${NRS} \
		          -r ${NRS_PER_NODE} \
		          -a ${NMPI_PER_RS} \
		          -c ${NCORES_PER_RS} \
		          -b packed:${NCORES_PER_MPI} \
		          -d packed \
		          $JobWorkDir/job.target
else

	echo Running on $SiteName
        cd $JobWorkDir && mpirun $JobWorkDir/job.target
fi
